import axios from "axios";
import Head from "next/head";
import Image from "next/image";
import type { NextPage } from "next";
import type {
    Character,
    CharacterResponse,
} from "../interfaces/RickAndMortyAPI";
import { useState } from "react";
import InfiniteScroll from "react-infinite-scroll-component";
import { Loader } from "../components/ui";

interface Props {
    characters: Character[];
    nextPageURL: string;
}

const Home: NextPage<Props> = ({
    characters: initialCharacters,
    nextPageURL: initialNextPageURL,
}) => {
    const [characters, setCharacters] =
        useState<Character[]>(initialCharacters);
    const [nextPageURL, setNextPageURL] = useState<string | null>(
        initialNextPageURL
    );

    const fetchNextPage = async () => {
        if (!nextPageURL) {
            return;
        }

        const response = await axios.get<CharacterResponse>(nextPageURL);
        setCharacters([...characters, ...response.data.results]);
        setNextPageURL(response.data.info.next);
    };

    return (
        <div>
            <Head>
                <title>Rick and Morty API</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main>
                <h1>Rick and Morty API</h1>

                <div>
                    <h2>Characters</h2>
                    <ul>
                        <InfiniteScroll
                            next={fetchNextPage}
                            hasMore={!!nextPageURL}
                            loader={
                                <Loader
                                    properties={{
                                        size: "40px",
                                        weight: "5px",
                                    }}
                                    style={{
                                        margin: "0px auto",
                                    }}
                                />
                            }
                            dataLength={characters.length}
                            endMessage={
                                <p style={{ textAlign: "center" }}>
                                    <b>Yay! You have seen it all</b>
                                </p>
                            }
                        >
                            {characters.map((character) => (
                                <li key={character.id}>
                                    <a href={`/character/${character.id}`}>
                                        {character.name}
                                    </a>
                                    <Image
                                        src={character.image}
                                        alt={character.name}
                                        width={200}
                                        height={200}
                                    />
                                </li>
                            ))}
                        </InfiniteScroll>
                    </ul>
                </div>
            </main>
        </div>
    );
};

export const getStaticProps = async () => {
    const response = await axios.get<CharacterResponse>(
        "https://rickandmortyapi.com/api/character?page=1"
    );

    return {
        props: {
            characters: response.data.results,
            nextPageURL: response.data.info.next,
        },
    };
};

export default Home;
